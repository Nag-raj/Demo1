UPDATE GenericItem[processor=de.hybris.platform.commerceservices.impex.impl.ConfigPropertyImportProcessor];pk[unique=true]

# Load the storefront context root config param
$oAuthUrl = $config-oAuthUrl
$clientId = $config-clientId
$clientSecret = $config-clientSecret

$storefrontSpecUrl=$config-storefrontSpecUrl

$freightPriceEndPoint=$config-freightPriceEndPoint
$contractPriceEndPoint=$config-contractPriceEndPoint
$salesTaxVertexEP=$config-salesTaxVertexEP
$sapOrderEndPoint=$config-sapOrderEndPoint
$salesForceEP=$config-salesForceEP


# ##############################################################
INSERT_UPDATE ConsumedOAuthCredential;id[unique=true];clientId;clientSecret;oAuthUrl
                                     ;testCredential;$clientId;$clientSecret;$oAuthUrl

###############################################################
# This sets up the endpoint called "local-hybris."
# #############################################################
INSERT_UPDATE Endpoint; id[unique = true]; version[unique = true];name; specUrl
                      ; freightPriceEndPoint ; unknown ; freightPriceEndPoint; $storefrontSpecUrl/odata2webservices/OutboundFreightCost/$metadata
                      ; contractPriceEndPoint ; unknown            ; contractPriceEndPoint  ; $storefrontSpecUrl/odata2webservices/OutboundContractPriceRequest/$metadata
                      ; salesTaxVertexEP ; unknown            ; salesTaxVertexEP  ; $storefrontSpecUrl/odata2webservices/OutboundSalesTax/$metadata
                      ; sapOrderEndPoint ; unknown            ; sapOrderEndPoint  ; $storefrontSpecUrl/odata2webservices/OutboundOMMOrderOMSOrder/$metadata
                      ; salesForceEP ; unknown            ; salesForceEP  ; $storefrontSpecUrl/odata2webservices/OutboundSalesForceRequest/$metadata

###############################################################
# This sets up the destination target called "testDestinationTarget."
# It will be used in the ConsumedDestination.
# #############################################################
INSERT_UPDATE DestinationTarget; id[unique = true]
                               ; freightPriceDestination
                               ; OutboundContractPriceRequest
                               ; salexTaxVertexDestination
                               ; sapOrderDestination
                               ; salesForceDestination
##############################################################
# This sets up a ConsumedDestination called "platform-basic."
# It uses the Endpoint and BasicCredential created above. The user calls
# the Outbound Service with the destination ID (e.g. "platform-basic").
# The Outbound Service looks up the details of the destination by ID,
# so it knows where to send the data
# ############################################################
INSERT_UPDATE ConsumedDestination; id[unique = true]; url; endpoint(id,version); credential(id); destinationTarget(id)
                                 ; freightPriceConsumedDestination ; $freightPriceEndPoint ; freightPriceEndPoint:unknown; testCredential; freightPriceDestination
                                 ; contractOBPriceRequest ; $contractPriceEndPoint  ; contractPriceEndPoint:unknown ; testCredential    ; OutboundContractPriceRequest
                                 ; salesTaxConsumedDestination ; $salesTaxVertexEP  ; salesTaxVertexEP:unknown ; testCredential    ; salexTaxVertexDestination
                                 ; sapOrderConsumedDestination ; $sapOrderEndPoint  ; sapOrderEndPoint:unknown ; testCredential    ; sapOrderDestination
                                 ; salesforceConsumedDestination ; $salesForceEP  ; salesForceEP:unknown ; testCredential    ; salesForceDestination
